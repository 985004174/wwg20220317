{
  "uid" : "3b204d12cda52fca",
  "name" : "test_agent_selectList",
  "fullName" : "test_demo01.Test_Control#test_agent_selectList",
  "historyId" : "68303b8751c42ff91c7ee445517658e3",
  "time" : {
    "start" : 1649061291436,
    "stop" : 1649061291695,
    "duration" : 259
  },
  "description" : "\n        获取经销商信息下拉列表\n        ",
  "descriptionHtml" : "<pre><code>    获取经销商信息下拉列表\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 14 == 0",
  "statusTrace" : "self = <case.Customer_management.test_demo01.Test_Control object at 0x7fa6c134a460>\ntoken_admin = (<Api_keywords.api_key.ApiKey object at 0x7fa6c1349c10>, 'RbxM3O3RSvvTGzIohK/e/uw43Rtux8B79F3hRUAanTDCK8K45LBYBUmiCtyKEk2R38HMvA3icR0Y5VEnS/+kXL8q/G34j8DJf5MnZML70LOkvZl5m4h2UDmdOEhHLwaZlqyTqhJvHKqP0kOPTnZjlcUPfoMEPMWqwXeFdAalL8A=')\n\n    @allure.feature('后台首页数据看板')\n    @allure.story('02.获取经销商信息下拉列表')\n    @allure.severity('critical')\n    # @pytest.mark.slow\n    def test_agent_selectList(self,token_admin):\n        \"\"\"\n        获取经销商信息下拉列表\n        \"\"\"\n        ak, token = token_admin\n        url = URL_ADMIN+'agent/selectList'\n        hd = {'token': token}\n        res2 = ak.get(url,headers=hd)\n        print(res2.text)\n        ret = res2.json()['ret']\n>       assert ret == 0\nE       assert 14 == 0\n\ntest_demo01.py:48: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "token_admin",
    "time" : {
      "start" : 1649061291026,
      "stop" : 1649061291026,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        获取经销商信息下拉列表\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 14 == 0",
    "statusTrace" : "self = <case.Customer_management.test_demo01.Test_Control object at 0x7fa6c134a460>\ntoken_admin = (<Api_keywords.api_key.ApiKey object at 0x7fa6c1349c10>, 'RbxM3O3RSvvTGzIohK/e/uw43Rtux8B79F3hRUAanTDCK8K45LBYBUmiCtyKEk2R38HMvA3icR0Y5VEnS/+kXL8q/G34j8DJf5MnZML70LOkvZl5m4h2UDmdOEhHLwaZlqyTqhJvHKqP0kOPTnZjlcUPfoMEPMWqwXeFdAalL8A=')\n\n    @allure.feature('后台首页数据看板')\n    @allure.story('02.获取经销商信息下拉列表')\n    @allure.severity('critical')\n    # @pytest.mark.slow\n    def test_agent_selectList(self,token_admin):\n        \"\"\"\n        获取经销商信息下拉列表\n        \"\"\"\n        ak, token = token_admin\n        url = URL_ADMIN+'agent/selectList'\n        hd = {'token': token}\n        res2 = ak.get(url,headers=hd)\n        print(res2.text)\n        ret = res2.json()['ret']\n>       assert ret == 0\nE       assert 14 == 0\n\ntest_demo01.py:48: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6ab7ce5ad7d942d4",
      "name" : "stdout",
      "source" : "6ab7ce5ad7d942d4.txt",
      "type" : "text/plain",
      "size" : 43
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "LLP系统"
  }, {
    "name" : "feature",
    "value" : "登录模块"
  }, {
    "name" : "feature",
    "value" : "后台首页数据看板"
  }, {
    "name" : "story",
    "value" : "02.获取经销商信息下拉列表"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "test_demo01"
  }, {
    "name" : "subSuite",
    "value" : "Test_Control"
  }, {
    "name" : "host",
    "value" : "kevinwudeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "35204-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_demo01"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3b204d12cda52fca.json",
  "parameterValues" : [ ]
}
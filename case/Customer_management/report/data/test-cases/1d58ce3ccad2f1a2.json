{
  "uid" : "1d58ce3ccad2f1a2",
  "name" : "test_getUserInfo",
  "fullName" : "test_demo01.Test_Control#test_getUserInfo",
  "historyId" : "c39f408e12341688ae40688c4c0fa396",
  "time" : {
    "start" : 1649061291044,
    "stop" : 1649061291360,
    "duration" : 316
  },
  "status" : "broken",
  "statusMessage" : "TypeError: 'bool' object is not subscriptable",
  "statusTrace" : "self = <case.Customer_management.test_demo01.Test_Control object at 0x7fa6c1338ee0>\ntoken_admin = (<Api_keywords.api_key.ApiKey object at 0x7fa6c1349c10>, 'RbxM3O3RSvvTGzIohK/e/uw43Rtux8B79F3hRUAanTDCK8K45LBYBUmiCtyKEk2R38HMvA3icR0Y5VEnS/+kXL8q/G34j8DJf5MnZML70LOkvZl5m4h2UDmdOEhHLwaZlqyTqhJvHKqP0kOPTnZjlcUPfoMEPMWqwXeFdAalL8A=')\n\n    @allure.story('01.登录获取token')\n    @allure.severity('critical')\n    def test_getUserInfo(self,token_admin):\n        ak, token = token_admin\n        url = URL_ADMIN + 'getUserInfo'\n        hd = {'token': token}\n        res1 = ak.get(url, headers=hd)\n        print(res1.text)\n>       token1 = ak.get_text(res1.text,'token')\n\ntest_demo01.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Api_keywords.api_key.ApiKey object at 0x7fa6c1349c10>\ndata = '{\"ret\":14,\"msg\":\"登录超时||未登录\"}', key = 'token'\n\n    def get_text(self, data, key):\n        dict_data = json.loads(data)\n        # 数据源转换json，loads讲json格式内容转换为字典格式\n        value = jsonpath.jsonpath(dict_data, '$..{0}'.format(key))\n        # print(value)\n        # jsonpath返回list，失败返回false，\n        # 根目录下面的任意键,jsonpath还需要学习\n>       return value[0]\nE       TypeError: 'bool' object is not subscriptable\n\n../../Api_keywords/api_key.py:30: TypeError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "token_admin",
    "time" : {
      "start" : 1649061291026,
      "stop" : 1649061291026,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: 'bool' object is not subscriptable",
    "statusTrace" : "self = <case.Customer_management.test_demo01.Test_Control object at 0x7fa6c1338ee0>\ntoken_admin = (<Api_keywords.api_key.ApiKey object at 0x7fa6c1349c10>, 'RbxM3O3RSvvTGzIohK/e/uw43Rtux8B79F3hRUAanTDCK8K45LBYBUmiCtyKEk2R38HMvA3icR0Y5VEnS/+kXL8q/G34j8DJf5MnZML70LOkvZl5m4h2UDmdOEhHLwaZlqyTqhJvHKqP0kOPTnZjlcUPfoMEPMWqwXeFdAalL8A=')\n\n    @allure.story('01.登录获取token')\n    @allure.severity('critical')\n    def test_getUserInfo(self,token_admin):\n        ak, token = token_admin\n        url = URL_ADMIN + 'getUserInfo'\n        hd = {'token': token}\n        res1 = ak.get(url, headers=hd)\n        print(res1.text)\n>       token1 = ak.get_text(res1.text,'token')\n\ntest_demo01.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Api_keywords.api_key.ApiKey object at 0x7fa6c1349c10>\ndata = '{\"ret\":14,\"msg\":\"登录超时||未登录\"}', key = 'token'\n\n    def get_text(self, data, key):\n        dict_data = json.loads(data)\n        # 数据源转换json，loads讲json格式内容转换为字典格式\n        value = jsonpath.jsonpath(dict_data, '$..{0}'.format(key))\n        # print(value)\n        # jsonpath返回list，失败返回false，\n        # 根目录下面的任意键,jsonpath还需要学习\n>       return value[0]\nE       TypeError: 'bool' object is not subscriptable\n\n../../Api_keywords/api_key.py:30: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b3e2c0647c5547b9",
      "name" : "stdout",
      "source" : "b3e2c0647c5547b9.txt",
      "type" : "text/plain",
      "size" : 43
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "01.登录获取token"
  }, {
    "name" : "feature",
    "value" : "登录模块"
  }, {
    "name" : "epic",
    "value" : "LLP系统"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "test_demo01"
  }, {
    "name" : "subSuite",
    "value" : "Test_Control"
  }, {
    "name" : "host",
    "value" : "kevinwudeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "35204-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_demo01"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "1d58ce3ccad2f1a2.json",
  "parameterValues" : [ ]
}